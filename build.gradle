apply plugin: 'com.android.application'
apply plugin: 'maven'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.+'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "http://maven.sms.co.at/content/repositories/thirdparty"
    }
    maven {
        url "http://maven.sms.co.at/content/repositories/releases"
    }
}

android {
    compileSdkVersion 19
    buildToolsVersion '20.0.0'

    defaultConfig {
        versionName '2.7-SNAPSHOT'
        versionCode 18
        
        minSdkVersion 9
        targetSdkVersion 19
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            res.srcDirs = ['res']
        }

        instrumentTest.setRoot('tests')
    }
    signingConfigs {
        release
    }
  
    if (project.hasProperty('buildNumber')) defaultConfig.versionName += '-' + buildNumber
    if (project.hasProperty('versionCode')) defaultConfig.versionCode = Integer.parseInt(versionCode)
  
    if (project.hasProperty('storeFile')) {
        android.signingConfigs.release.storeFile = file(storeFile)
        android.signingConfigs.release.storePassword = storePassword
        android.signingConfigs.release.keyAlias = keyAlias
        android.signingConfigs.release.keyPassword = keyPassword
    } else {
        buildTypes.release.signingConfig = null
    }

    productFlavors {
        play {}
        amazon {} 
    }

    dependencies {
        compile 'com.mysms.android:mysms-android-theme-base:1.2.9'
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
        applicationVariants.all { variant ->
            def apk = variant.packageApplication.outputFile;
            def newName = "mysms-theme-system-" + variant.baseName.replace("-release", "") + (apk.name.contains("-unaligned") ? "-unaligned" : "") + "-" + defaultConfig.versionName + ".apk";

            if (variant.zipAlign) {
                variant.packageApplication.outputFile = new File(apk.parentFile, newName);
                variant.zipAlign.outputFile = new File(apk.parentFile, newName.replace("-unaligned", ""));
            } else {
	              variant.packageApplication.outputFile = new File(apk.parentFile, newName.replace("-unaligned", ""));
            }
        }
    }
}
 
tasks.withType(Compile) {
    options.encoding = "UTF-8"
}
